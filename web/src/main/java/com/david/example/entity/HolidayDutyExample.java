package com.david.example.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class HolidayDutyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    protected Integer limit;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public HolidayDutyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset=offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public void setLimit(Integer limit) {
        this.limit=limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public Integer getLimit() {
        return limit;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                return;
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                return;
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                return;
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                return;
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                return;
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                return;
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andUserWorkNumberIsNull() {
            addCriterion("user_work_number is null");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberIsNotNull() {
            addCriterion("user_work_number is not null");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberEqualTo(String value) {
            addCriterion("user_work_number =", value, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberNotEqualTo(String value) {
            addCriterion("user_work_number <>", value, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberGreaterThan(String value) {
            addCriterion("user_work_number >", value, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberGreaterThanOrEqualTo(String value) {
            addCriterion("user_work_number >=", value, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberLessThan(String value) {
            addCriterion("user_work_number <", value, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberLessThanOrEqualTo(String value) {
            addCriterion("user_work_number <=", value, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberLike(String value) {
            addCriterion("user_work_number like", value, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberNotLike(String value) {
            addCriterion("user_work_number not like", value, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberIn(List<String> values) {
            addCriterion("user_work_number in", values, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberNotIn(List<String> values) {
            addCriterion("user_work_number not in", values, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberBetween(String value1, String value2) {
            addCriterion("user_work_number between", value1, value2, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumberNotBetween(String value1, String value2) {
            addCriterion("user_work_number not between", value1, value2, "userWorkNumber");
            return (Criteria) this;
        }

        public Criteria andDutyDateIsNull() {
            addCriterion("duty_date is null");
            return (Criteria) this;
        }

        public Criteria andDutyDateIsNotNull() {
            addCriterion("duty_date is not null");
            return (Criteria) this;
        }

        public Criteria andDutyDateEqualTo(Date value) {
            addCriterionForJDBCDate("duty_date =", value, "dutyDate");
            return (Criteria) this;
        }

        public Criteria andDutyDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("duty_date <>", value, "dutyDate");
            return (Criteria) this;
        }

        public Criteria andDutyDateGreaterThan(Date value) {
            addCriterionForJDBCDate("duty_date >", value, "dutyDate");
            return (Criteria) this;
        }

        public Criteria andDutyDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("duty_date >=", value, "dutyDate");
            return (Criteria) this;
        }

        public Criteria andDutyDateLessThan(Date value) {
            addCriterionForJDBCDate("duty_date <", value, "dutyDate");
            return (Criteria) this;
        }

        public Criteria andDutyDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("duty_date <=", value, "dutyDate");
            return (Criteria) this;
        }

        public Criteria andDutyDateIn(List<Date> values) {
            addCriterionForJDBCDate("duty_date in", values, "dutyDate");
            return (Criteria) this;
        }

        public Criteria andDutyDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("duty_date not in", values, "dutyDate");
            return (Criteria) this;
        }

        public Criteria andDutyDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("duty_date between", value1, value2, "dutyDate");
            return (Criteria) this;
        }

        public Criteria andDutyDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("duty_date not between", value1, value2, "dutyDate");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeIsNull() {
            addCriterion("holiday_type is null");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeIsNotNull() {
            addCriterion("holiday_type is not null");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeEqualTo(String value) {
            addCriterion("holiday_type =", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeNotEqualTo(String value) {
            addCriterion("holiday_type <>", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeGreaterThan(String value) {
            addCriterion("holiday_type >", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeGreaterThanOrEqualTo(String value) {
            addCriterion("holiday_type >=", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeLessThan(String value) {
            addCriterion("holiday_type <", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeLessThanOrEqualTo(String value) {
            addCriterion("holiday_type <=", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeLike(String value) {
            addCriterion("holiday_type like", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeNotLike(String value) {
            addCriterion("holiday_type not like", value, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeIn(List<String> values) {
            addCriterion("holiday_type in", values, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeNotIn(List<String> values) {
            addCriterion("holiday_type not in", values, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeBetween(String value1, String value2) {
            addCriterion("holiday_type between", value1, value2, "holidayType");
            return (Criteria) this;
        }

        public Criteria andHolidayTypeNotBetween(String value1, String value2) {
            addCriterion("holiday_type not between", value1, value2, "holidayType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table holiday_duty
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table holiday_duty
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}